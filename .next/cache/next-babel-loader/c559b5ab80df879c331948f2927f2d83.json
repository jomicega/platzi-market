{"ast":null,"code":"var _jsxFileName = \"/Users/jomicega/projects/courses/pl/nextJs/platzi-market/components/ProductSummary/AddToCart.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Input, Icon, Transition } from 'semantic-ui-react';\nimport { useCartMutations } from '@store/Cart';\n\n// Fake a server Response, we don't care on this project\n// about data persistency, but you may add it :)\nconst addToCartRequest = () => new Promise((resolve, reject) => {\n  window.setTimeout(resolve, 600);\n});\n\nconst validate = quantity => {\n  let error = '';\n  if (quantity < 1) error = \"Can't be blank\";\n  return error;\n};\n\nconst AddToCart = ({\n  product\n}) => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState('');\n  const {\n    0: quantity,\n    1: setQuantity\n  } = useState(1);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    addToCart\n  } = useCartMutations();\n\n  const toggleMessage = () => {\n    setTimeout(() => {\n      setVisible(false);\n    }, 1000);\n  };\n\n  const handleSubmit = async () => {\n    const error = validate(quantity);\n    setError(error);\n\n    if (!error) {\n      setLoading(true);\n      addToCartRequest().then(() => {\n        addToCart(product, quantity);\n        setLoading(false);\n        setQuantity(quantity);\n        setVisible(true);\n        toggleMessage();\n      }).catch(err => {\n        setError(`Error: ${err}` || 'Something went wrong');\n        setLoading(false);\n      });\n    }\n  };\n\n  const handleChange = ({\n    target\n  }) => setQuantity(parseInt(target.value, 10));\n\n  return __jsx(React.Fragment, null, __jsx(Input, {\n    type: \"number\",\n    placeholder: \"Quantity\",\n    value: quantity,\n    min: 1,\n    step: 1,\n    error: !!error,\n    onChange: handleChange,\n    action: {\n      color: 'green',\n      content: 'Add to Cart',\n      icon: 'plus cart',\n      onClick: handleSubmit,\n      loading,\n      disabled: loading\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), error && __jsx(\"div\", {\n    style: {\n      color: 'red',\n      position: 'absolute'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, error), __jsx(Transition, {\n    duration: {\n      hide: 500,\n      show: 500\n    },\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: {\n      color: 'green',\n      position: 'absolute'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    name: \"check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), \"Added to cart\")));\n};\n\nexport default AddToCart;","map":{"version":3,"sources":["/Users/jomicega/projects/courses/pl/nextJs/platzi-market/components/ProductSummary/AddToCart.tsx"],"names":["React","useState","Input","Icon","Transition","useCartMutations","addToCartRequest","Promise","resolve","reject","window","setTimeout","validate","quantity","error","AddToCart","product","loading","setLoading","setError","setQuantity","visible","setVisible","addToCart","toggleMessage","handleSubmit","then","catch","err","handleChange","target","parseInt","value","color","content","icon","onClick","disabled","position","hide","show"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { Input, Icon, Transition } from 'semantic-ui-react'\nimport { useCartMutations } from '@store/Cart'\n\ntype AddToCartProps = {\n  product: TProduct\n}\n\n// Fake a server Response, we don't care on this project\n// about data persistency, but you may add it :)\nconst addToCartRequest = () =>\n  new Promise((resolve, reject) => {\n    window.setTimeout(resolve, 600)\n  })\n\nconst validate = (quantity: number) => {\n  let error = ''\n  if (quantity < 1) error = \"Can't be blank\"\n\n  return error\n}\n\nconst AddToCart = ({ product }: AddToCartProps) => {\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState('')\n  const [quantity, setQuantity] = useState(1)\n  const [visible, setVisible] = useState(false)\n  const { addToCart } = useCartMutations()\n\n  const toggleMessage = () => {\n    setTimeout(() => {\n      setVisible(false)\n    }, 1000)\n  }\n\n  const handleSubmit = async () => {\n    const error = validate(quantity)\n    setError(error)\n\n    if (!error) {\n      setLoading(true)\n      addToCartRequest()\n        .then(() => {\n          addToCart(product, quantity)\n          setLoading(false)\n          setQuantity(quantity)\n          setVisible(true)\n          toggleMessage()\n        })\n        .catch((err: Error) => {\n          setError(`Error: ${err}` || 'Something went wrong')\n          setLoading(false)\n        })\n    }\n  }\n\n  const handleChange = ({ target }: React.ChangeEvent<HTMLInputElement>) =>\n    setQuantity(parseInt(target.value, 10))\n\n  return (\n    <>\n      <Input\n        type=\"number\"\n        placeholder=\"Quantity\"\n        value={quantity}\n        min={1}\n        step={1}\n        error={!!error}\n        onChange={handleChange}\n        action={{\n          color: 'green',\n          content: 'Add to Cart',\n          icon: 'plus cart',\n          onClick: handleSubmit,\n          loading,\n          disabled: loading,\n        }}\n      />\n      {error && (\n        <div style={{ color: 'red', position: 'absolute' }}>{error}</div>\n      )}\n      <Transition duration={{ hide: 500, show: 500 }} visible={visible}>\n        <div style={{ color: 'green', position: 'absolute' }}>\n          <Icon name=\"check\" />\n          Added to cart\n        </div>\n      </Transition>\n    </>\n  )\n}\n\nexport default AddToCart\n"]},"metadata":{},"sourceType":"module"}