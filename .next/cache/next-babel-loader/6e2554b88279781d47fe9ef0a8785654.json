{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jomicega/projects/courses/pl/nextJs/platzi-market/store/Cart.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useReducer } from 'react';\nvar defaultState = {};\nvar CartItemsContext = React.createContext(defaultState);\nvar CartDispatchContext = React.createContext(function () {});\n\nvar CartProvider = function CartProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useReducer = useReducer(cartReducers, defaultState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  return __jsx(CartItemsContext.Provider, {\n    value: state,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(CartDispatchContext.Provider, {\n    value: dispatch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, children));\n};\n\n_s(CartProvider, \"zEDbosDjpARfUl0vNel/+uYp9FA=\");\n\n_c = CartProvider;\n\nfunction cartReducers(state, _ref2) {\n  var item = _ref2.item,\n      type = _ref2.type,\n      _ref2$quantity = _ref2.quantity,\n      qtyToAdd = _ref2$quantity === void 0 ? 1 : _ref2$quantity;\n  var existingCartItem = state[item.id];\n\n  switch (type) {\n    case 'add':\n      {\n        if (existingCartItem != undefined) {\n          var quantity = existingCartItem.quantity + qtyToAdd;\n          return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, item.id, _objectSpread(_objectSpread({}, existingCartItem), {}, {\n            quantity: quantity\n          })));\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, item.id, _objectSpread(_objectSpread({}, item), {}, {\n          quantity: qtyToAdd\n        })));\n      }\n\n    case 'remove':\n      {\n        if (existingCartItem == undefined) {\n          return state;\n        }\n\n        var _quantity = existingCartItem.quantity - 1;\n\n        if (_quantity > 0) {\n          return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, item.id, _objectSpread(_objectSpread({}, existingCartItem), {}, {\n            quantity: _quantity\n          })));\n        }\n\n        var newCartItems = _objectSpread({}, state);\n\n        delete newCartItems[item.id];\n        return newCartItems;\n      }\n\n    default:\n      {\n        throw new Error(\"Unhandled action type: \".concat(type));\n      }\n  }\n}\n\nvar getCartSubTotal = function getCartSubTotal(sum, item) {\n  sum += item.price * item.quantity;\n  return sum;\n};\n\nvar getCartCount = function getCartCount(sum, item) {\n  return sum + item.quantity;\n};\n/**\n * Hey there insatiably brain,\n * Are you interested in this pattern where the Context values are\n * exposed without actually provinding access to the Context itself :)\n * https://kentcdodds.com/blog/how-to-use-react-context-effectively\n */\n\n\nexport var useCart = function useCart() {\n  _s2();\n\n  var itemsById = useContext(CartItemsContext);\n  var items = Object.values(itemsById); // Not familiar with Array.reduce? :)\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\n\n  var count = items.reduce(getCartCount, 0);\n  var subTotal = items.reduce(getCartSubTotal, 0);\n  return {\n    items: items,\n    itemsById: itemsById,\n    count: count,\n    subTotal: subTotal\n  };\n};\n\n_s2(useCart, \"iAmorUPFRY64w7Jvzz+kkbzLn1E=\");\n\nexport var useCartMutations = function useCartMutations() {\n  _s3();\n\n  var dispatch = useContext(CartDispatchContext);\n\n  var addToCart = function addToCart(product, quantity) {\n    return dispatch({\n      type: 'add',\n      item: product,\n      quantity: quantity\n    });\n  };\n\n  var removeFromCart = function removeFromCart(product) {\n    return dispatch({\n      type: 'remove',\n      item: product\n    });\n  };\n\n  return {\n    addToCart: addToCart,\n    removeFromCart: removeFromCart\n  };\n};\n\n_s3(useCartMutations, \"kCU+r/6VuXUfg74P0SIOBSNFld8=\");\n\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/jomicega/projects/courses/pl/nextJs/platzi-market/store/Cart.tsx"],"names":["React","useContext","useReducer","defaultState","CartItemsContext","createContext","CartDispatchContext","CartProvider","children","cartReducers","state","dispatch","item","type","quantity","qtyToAdd","existingCartItem","id","undefined","newCartItems","Error","getCartSubTotal","sum","price","getCartCount","useCart","itemsById","items","Object","values","count","reduce","subTotal","useCartMutations","addToCart","product","removeFromCart"],"mappings":"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","sourcesContent":["import React, { Dispatch, useContext, useReducer } from 'react'\n\nexport type CartItemType = TProduct & { quantity: number }\n\nexport type CartState = {\n  [key: string]: CartItemType\n}\n\nexport type CartAction = {\n  type: 'add' | 'remove'\n  item: TProduct\n  quantity?: number\n}\n\nconst defaultState = {} as CartState\n\nconst CartItemsContext = React.createContext(defaultState)\nconst CartDispatchContext = React.createContext((() => {}) as Dispatch<\n  CartAction\n>)\n\nconst CartProvider = ({ children }: { children: React.ReactNode }) => {\n  const [state, dispatch] = useReducer(cartReducers, defaultState)\n\n  return (\n    <CartItemsContext.Provider value={state}>\n      <CartDispatchContext.Provider value={dispatch}>\n        {children}\n      </CartDispatchContext.Provider>\n    </CartItemsContext.Provider>\n  )\n}\n\nfunction cartReducers(\n  state: CartState,\n  { item, type, quantity: qtyToAdd = 1 }: CartAction\n) {\n  const existingCartItem = state[item.id]\n\n  switch (type) {\n    case 'add': {\n      if (existingCartItem != undefined) {\n        const quantity = existingCartItem.quantity + qtyToAdd\n        return {\n          ...state,\n          [item.id]: {\n            ...existingCartItem,\n            quantity,\n          },\n        }\n      }\n\n      return {\n        ...state,\n        [item.id]: {\n          ...item,\n          quantity: qtyToAdd,\n        },\n      }\n    }\n\n    case 'remove': {\n      if (existingCartItem == undefined) {\n        return state\n      }\n\n      const quantity = existingCartItem.quantity - 1\n      if (quantity > 0) {\n        return {\n          ...state,\n          [item.id]: {\n            ...existingCartItem,\n            quantity,\n          },\n        }\n      }\n\n      const newCartItems = { ...state }\n      delete newCartItems[item.id]\n      return newCartItems\n    }\n\n    default: {\n      throw new Error(`Unhandled action type: ${type}`)\n    }\n  }\n}\n\nconst getCartSubTotal = (sum: number, item: CartItemType) => {\n  sum += item.price * item.quantity\n  return sum\n}\nconst getCartCount = (sum: number, item: CartItemType) => sum + item.quantity\n/**\n * Hey there insatiably brain,\n * Are you interested in this pattern where the Context values are\n * exposed without actually provinding access to the Context itself :)\n * https://kentcdodds.com/blog/how-to-use-react-context-effectively\n */\nexport const useCart = () => {\n  const itemsById = useContext(CartItemsContext)\n  const items = Object.values(itemsById)\n  // Not familiar with Array.reduce? :)\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\n  const count = items.reduce(getCartCount, 0)\n  const subTotal = items.reduce(getCartSubTotal, 0)\n\n  return {\n    items,\n    itemsById,\n    count,\n    subTotal,\n  }\n}\nexport const useCartMutations = () => {\n  const dispatch = useContext(CartDispatchContext)\n\n  const addToCart = (product: TProduct, quantity?: number) =>\n    dispatch({\n      type: 'add',\n      item: product,\n      quantity,\n    })\n\n  const removeFromCart = (product: TProduct) =>\n    dispatch({\n      type: 'remove',\n      item: product,\n    })\n\n  return {\n    addToCart,\n    removeFromCart,\n  }\n}\n\nexport default CartProvider\n"]},"metadata":{},"sourceType":"module"}